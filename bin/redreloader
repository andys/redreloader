#!/usr/bin/env ruby

require 'yaml'
require 'redreloader'

fn = ARGV[0]
fn ||= '/etc/redreloader.conf'

config = YAML::load(File.read(fn))
puts config.inspect

client = Redreloader.new(config['redis'])

def log(str)
  puts "[#{Time.now}] ---> #{str}"
end

def run!(cmd)
  log "Running #{cmd.inspect}:"
  system cmd
  log "Returned #{$!.to_i}"
end

digest = Redreloader.calcmd5(File.read(config['file']))

#run! config['command']

begin
  client.process_changes(config['key'], digest) do |newdata, newdigest|
    log "File changed (#{newdata.length} bytes)"
    File.open(config['file'], 'w') {|io| io.write(newdata) }
    digest = newdigest
    run! config['command']
  end
rescue Redis::BaseConnectionError => error
  log "#{error}, retrying in 3"
  sleep 3
  retry
end
